# Install MySQL Server 8.0.x
# dnf install mysql-server -y
# Start MySQL Service
# systemctl enable mysqld
# systemctl start mysqld
# Next, We need to change the default root password in order to start using the database service. Use password ExpenseApp@1 or any other as per your choice.
# mysql_secure_installation --set-root-pass ExpenseApp@1

- name: Configuring DB Server
  hosts: db
  become: yes
  vars_prompt:  # This has to stay at PLAY level only, inside TASK level did not work.
  - name: mysql_root_password
    prompt: Enter MySql Password of your choice
    private: no

  tasks:
  - name: Install MySQL Server 8.0.x
    ansible.builtin.dnf:
      name: mysql-server
      state: latest
  - name: Start and Enable MySql service
    ansible.builtin.service:
      name: mysqld
      state: started
      enabled:  yes

# sudo mysql
# show databases; -- both works
# systemctl status mysqld -- works
  
  - name: Install Python dependencies for mysql (PyMySQL)
    ansible.builtin.pip:
      name: 
      - PyMySQL
      - cryptography
      executable: pip3.9 # pip3.11 if python version is 3.11

  - name: check if mysql root password is already setup or not
    community.mysql.mysql_info:
      login_user: root
      login_password: "{{mysql_root_password}}"
      login_host: db.mydevops-learning.cloud
      filter: version
    ignore_errors:  yes
    register: mysql_output

  - name: print mysql_output
    ansible.builtin.debug:
      msg:  "MySQL Register Output is: {{mysql_output}}"
  
# TASK [check if mysql root password is already setup or not] **************************************************************************
# fatal: [localhost]: FAILED! => {"changed": false, "msg": "A MySQL module is required: for Python 2.7 either PyMySQL, or MySQL-python, or for Python 3.X mysqlclient or PyMySQL. Consider setting ansible_python_interpreter to use the intended Python version."}

#///////////Now after setting up PyMySQL error changes as below//////

# TASK [check if mysql root password is already setup or not] **************************************************************************
# fatal: [localhost]: FAILED! => {"changed": false, "msg": "unable to connect to database using pymysql 1.1.0, check login_user and login_password are correct or /root/.my.cnf has the credentials. Exception message: (1045, \"Access denied for user 'root'@'localhost' (using password: YES)\")"}

  - name: setup root password now
    ansible.builtin.command:  "mysql_secure_installation --set-root-pass {{mysql_root_password}}"
    when: mysql_output.failed is true # don't give {{ }} in when condition

#sudo yum remove mysql mysql-server --> u can uninstall and retry the playbook on the instance..
# I am facing issue: instead of mysql_output.failed=false in second run, its still coming true and thus shows as failed.. even using db-siva.yaml facing same issue, maybe I need to try using proper inventory.ini entry and retry this...

# TASK [check if mysql root password is already setup or not] **************************************************************************
# fatal: [localhost]: FAILED! => {"changed": false, "msg": "unable to connect to database using pymysql 1.1.0, check login_user and login_password are correct or /root/.my.cnf has the credentials. Exception message: (1045, \"Access denied for user 'root'@'localhost' (using password: YES)\")"}
# ...ignoring

# TASK [print mysql_output] ************************************************************************************************************
# ok: [localhost] => {
#     "msg": "MySQL Register Output is: {'failed': True, 'msg': 'unable to connect to database using pymysql 1.1.0, check login_user and login_password are correct or /root/.my.cnf has the credentials. Exception message: (1045, \"Access denied for user \\'root\\'@\\'localhost\\' (using password: YES)\")', 'changed': False}"
# }

# TASK [setup root password now] *******************************************************************************************************
# fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["mysql_secure_installation", "--set-root-pass", "ExpenseApp@1"], "delta": "0:00:00.011477", "end": "2024-05-03 14:58:56.343316", "msg": "non-zero return code", "rc": 1, "start": "2024-05-03 14:58:56.331839", "stderr": "", "stderr_lines": [], "stdout": "Password already set, You cannot reset the password with mysql_secure_installation", "stdout_lines": ["Password already set, You cannot reset the password with mysql_secure_installation"]}


#/////////////////////////////////////////////////
#Today I set this up inside inevntory.ini and properly works:
#ansible-playbook -i inventory.ini -e ansible_user=ec2-user -e ansible_password=DevOps321 db-1.yaml

#first run://///////////////////////

# [ ec2-user@ip-172-31-26-59 ~/expense-ansible ]$ ansible-playbook -i inventory.ini -e ansible_user=ec2-user -e ansible_password=DevOps321 db-1.yaml
# Enter MySql Password of your choice: ExpenseApp@1

# PLAY [Configuring DB Server] *********************************************************************************************************

# TASK [Gathering Facts] ***************************************************************************************************************
# ok: [db.mydevops-learning.cloud]

# TASK [Install MySQL Server 8.0.x] ****************************************************************************************************
# changed: [db.mydevops-learning.cloud]

# TASK [Start and Enable MySql service] ************************************************************************************************
# changed: [db.mydevops-learning.cloud]

# TASK [Install Python dependencies for mysql (PyMySQL)] *******************************************************************************
# changed: [db.mydevops-learning.cloud]

# TASK [check if mysql root password is already setup or not] **************************************************************************
# fatal: [db.mydevops-learning.cloud]: FAILED! => {"changed": false, "msg": "unable to connect to database using pymysql 1.1.0, check login_user and login_password are correct or /root/.my.cnf has the credentials. Exception message: (1130, \"ip-172-31-29-161.ec2.internal' is not allowed to connect to this MySQL server\")"}
# ...ignoring

# TASK [print mysql_output] ************************************************************************************************************
# ok: [db.mydevops-learning.cloud] => {
#     "msg": "MySQL Register Output is: {'failed': True, 'msg': 'unable to connect to database using pymysql 1.1.0, check login_user and login_password are correct or /root/.my.cnf has the credentials. Exception message: (1130, \"ip-172-31-29-161.ec2.internal\\' is not allowed to connect to this MySQL server\")', 'changed': False}"
# }

# TASK [setup root password now] *******************************************************************************************************
# changed: [db.mydevops-learning.cloud]

# Second run://///////////////////////

# [ ec2-user@ip-172-31-26-59 ~/expense-ansible ]$ ansible-playbook -i inventory.ini -e ansible_user=ec2-user -e ansible_password=DevOps321 db-1.yaml
# Enter MySql Password of your choice: ExpenseApp@1

# PLAY [Configuring DB Server] *********************************************************************************************************

# TASK [Gathering Facts] ***************************************************************************************************************
# ok: [db.mydevops-learning.cloud]

# TASK [Install MySQL Server 8.0.x] ****************************************************************************************************
# ok: [db.mydevops-learning.cloud]

# TASK [Start and Enable MySql service] ************************************************************************************************
# ok: [db.mydevops-learning.cloud]

# TASK [Install Python dependencies for mysql (PyMySQL)] *******************************************************************************
# ok: [db.mydevops-learning.cloud]

# TASK [check if mysql root password is already setup or not] **************************************************************************
# ok: [db.mydevops-learning.cloud]

# TASK [print mysql_output] ************************************************************************************************************
# ok: [db.mydevops-learning.cloud] => {
#     "msg": "MySQL Register Output is: {'changed': False, 'connector_name': 'pymysql', 'connector_version': '1.1.0', 'version': {'major': 8, 'minor': 0, 'release': 36, 'suffix': '', 'full': '8.0.36'}, 'failed': False}"
# }

# TASK [setup root password now] *******************************************************************************************************
# skipping: [db.mydevops-learning.cloud]

