# dnf module disable nodejs -y
# dnf module enable nodejs:20 -y
# dnf install nodejs -y
# useradd expense
# mkdir /app
# curl -o /tmp/backend.zip https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
# cd /app
# unzip /tmp/backend.zip
# cd /app
# npm install
# vim /etc/systemd/system/backend.service
# systemctl daemon-reload
# systemctl start backend
# systemctl enable backend
# dnf install mysql -y
# mysql -h <MYSQL-SERVER-IPADDRESS> -uroot -pExpenseApp@1 < /app/schema/backend.sql
# systemctl restart backend

- name: Configuring Backend Server
  hosts: backend
  become: yes
  vars_prompt:
  - name: mysql_password
    prompt: Enter MySql Password
    private: no
  tasks:
  - name: Disable nodejs
    ansible.builtin.command:  dnf module disable nodejs -y
  - name: Enable nodejs
    ansible.builtin.command:  dnf module enable nodejs:20 -y
  - name: Install nodejs
    ansible.builtin.dnf:  
      name: "{{item}}"
      state: latest
    loop:
    - nodejs
    - mysql
  - name: Create user expense
    ansible.builtin.user:
      name: expense
  - name: Create new directory app
    ansible.builtin.file:
      path: /app  
      state: directory
  - name: Download and Unzip 
    ansible.builtin.unarchive:
      src: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /app
      remote_src: yes
  - name: Install nodejs dependencies
    ansible.builtin.command: npm install
    args:
      chdir:  /app
  - name: Copy backend.service
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service
  - name: Install MySQL dependencies python, for ansible to connect to mysql we need them.
    ansible.builtin.pip:
    name:
      - PyMySQL
      - cryptography
    executable: pip3.9
  - name: Import data backend.sql into mysql
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{mysql_password}}"
      login_host: backend.mydevops-learning.cloud
      state: import
      name: all
      target: /app/schema/backend.sql
  - name: Deamon Reload
    ansible.builtin.systemd_service:
      daemon_reload:  true
  - name: Start and Enable backend service
    ansible.builtin.service:
      name: backend
      state: started
      enabled: yes